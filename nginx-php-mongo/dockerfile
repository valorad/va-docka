FROM php:fpm-alpine

LABEL maintainer="valorad <xmj-alliance@wcnexus.com>"

ENV php_vars /usr/local/etc/php/conf.d/docker-vars.ini
ENV fpm_conf /usr/local/etc/php-fpm.d/www.conf

# php mongo extension install and php-fpm configs
# --> mongodb build dependencies
RUN apk update \
&& apk add --no-cache \
      autoconf \
      gcc \
      libc-dev \
      zlib-dev \
      make \
      linux-headers \
&& pecl install mongodb \
&& docker-php-ext-enable mongodb \
# && echo "extension=mongodb.so" > /usr/local/etc/php/conf.d/ext.ini \
# --> clearings
&& apk del \
      autoconf \
      gcc \
      libc-dev \
      zlib-dev \
      make \
      linux-headers \
&& rm -rf /var/cache/apk/* \
# --> tweak php-fpm config
&& echo "cgi.fix_pathinfo=0" > ${php_vars} \
&& echo "upload_max_filesize = 100M"  >> ${php_vars} \
&& echo "post_max_size = 100M"  >> ${php_vars} \
&& echo "variables_order = \"EGPCS\""  >> ${php_vars} \
&& echo "memory_limit = 128M"  >> ${php_vars} \
&& sed -i \
    -e "s/;catch_workers_output\s*=\s*yes/catch_workers_output = yes/g" \
    -e "s/pm.max_children = 5/pm.max_children = 4/g" \
    -e "s/pm.start_servers = 2/pm.start_servers = 3/g" \
    -e "s/pm.min_spare_servers = 1/pm.min_spare_servers = 2/g" \
    -e "s/pm.max_spare_servers = 3/pm.max_spare_servers = 4/g" \
    -e "s/;pm.max_requests = 500/pm.max_requests = 200/g" \
    -e "s/user = www-data/user = nginx/g" \
    -e "s/group = www-data/group = nginx/g" \
    -e "s/;listen.mode = 0660/listen.mode = 0666/g" \
    -e "s/;listen.owner = www-data/listen.owner = nginx/g" \
    -e "s/;listen.group = www-data/listen.group = nginx/g" \
    -e "s/listen = 127.0.0.1:9000/listen = \/var\/run\/php-fpm.sock/g" \
    -e "s/^;clear_env = no$/clear_env = no/" \
    ${fpm_conf}

# software installation
RUN apk update \
 && apk add --no-cache \
      shadow \
      openssl-dev \
      supervisor \
      nginx \
      sudo \
 && rm -rf /var/cache/apk/* \
 # --> delete default nginx conf
 && rm /etc/nginx/conf.d/*

# nginx config
RUN addgroup -S nginx \
 && usermod -d -m /var/cache/nginx -u 12580 nginx

# composer installation
RUN php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" \
 && php composer-setup.php --install-dir=/usr/bin --filename=composer \
 && php -r "unlink('composer-setup.php');"

ADD ./workspace/*.sh /workspace/
ADD ./index.php /workspace/www/default/
ADD ./nginx/conf.d/default.conf /etc/nginx/conf.d/
ADD ./supervisord/supervisord.conf /etc/supervisord.conf

VOLUME ["/workspace/www", "/workspace/docking"]

WORKDIR /workspace

EXPOSE 443 80

ENTRYPOINT ["/workspace/start.sh"]